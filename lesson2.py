# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

list_test = [1, 'str', False]
for types in list_test:
    print(type(types))

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

list = []
list_length = int(input("Сколько элементов вы хотите иметь в списке? "))
i = 0
while i != list_length:
    list.append(input("Введите элемент "))
    i += 1

list_change = ", " .join(list)      #делаю еще один лист
list2 = list_change.split(", ")

i = 0                               #повторяю каждое второе число в первом листе
while i != list_length - 1:
    if i % 2 == 0:
        list[i] = list[i+1]
        i += 1
    i += 1

i = 0                               #повторяю каждое первое число во втором листе
while i != list_length - 1:
    if i % 2 == 0:
        list2[i+1] = list2[i]
        i += 1
    i += 1

i = 0                               #смешиваю два листа
while i != list_length - 1:
    if i % 2 == 0:
        list2[i] = list[i]
        i += 1
    i += 1

print(list2)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

user_choice = int(input("Введите месяц в виде целого числа от 1 до 12 "))
season_list = ["Зима", "Зима", "Весна", "Весна", "Весна", "Лето", "Лето", "Лето", "Осень", "Осень", "Осень", "Зима"]
print(season_list[user_choice - 1])
season_dict = {
    1: "Зима",
    2: "Зима",
    3: "Весна",
    4: "Весна",
    5: "Весна",
    6: "Лето",
    7: "Лето",
    8: "Лето",
    9: "Осень",
    10: "Осень",
    11: "Осень",
    12: "Зима"
}
print(season_dict[user_choice])

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

user_words = input("Введите строку из нескольких слов разделённых пробелами ")
words_split = user_words.split(' ')             #деляю лист из строки
i = 0
words_list = []                                 #второй лист для модифицированных слов
while i != len(words_split):
    if len(words_split[i]) > 10:
        words_list.append(words_split[i][:10])  #добавляю модифицированные слова в новый лист
        i += 1
    else:
        words_list.append(words_split[i])
        i += 1
words_len = len(words_list)
i = 0
while i < words_len:                            #в итоге, у меня 2 листа, оригинальный и с модифицированными словами
    print(i + 1, words_list[i])
    i += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

user_number = input("Введите не возрастающий набор натуральных ОДНОЗНАЧНЫХ чисел через пробел \n")

number_list = user_number.split(" ")                  #создаю лист из сторки
print(number_list)

rating_number = input("Введите новое число ")
number_list.append(rating_number)                     #добавляю новое число в лист
i = 0
second_number_list = []                               #создаю новый лист
list_length = len(number_list)
while i != list_length:
    second_number_list.append(max(number_list))       #ввожу числа по порядку от самого большого
    number_list.remove(max(number_list))
    i += 1
print(second_number_list)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

# 6.5 ** Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.

items_number = int(input("Введите количетсво товаров что вы хотите зарегистрировать: "))
i = 0
item_list = []

item_analysis_name = []              #лист с данными для словаря для задания 2
item_analysis_price = []             #лист с данными для словаря для задания 2
item_analysis_qt = []                #лист с данными для словаря для задания 2
item_analysis_count = []             #лист с данными для словаря для задания 2

while i != items_number:                                     #добавляю кортежи в лист
    item_id = int(input("Введите номер товара: "))
    item_dict = {'название': input("Введите название продукта: "),
                 'цена': input("Введите цену продукта: "),
                 'количество': input("Введите количетсво продуктов: "),
                 'eд': input("Введите единицу измерения (пример: шт.): ")}

    item_analysis_name.append(item_dict['название'])         #данные для словаря для задания 2
    item_analysis_price.append(item_dict['цена'])            #данные для словаря для задания 2
    item_analysis_qt.append(item_dict['количество'])         #данные для словаря для задания 2
    item_analysis_count.append(item_dict['eд'])              #данные для словаря для задания 2

    item_tuple = (item_id, item_dict)
    item_list.append(item_tuple)
    i += 1

item_list_len = len(item_list)                              #вывожу каждый кортеж в листе с новой строки
i = 0
while i < item_list_len:
    print(item_list[i])
    i += 1

item_analysis_dict = {
    "название": item_analysis_name,
    "цена": item_analysis_price,
    "количество": item_analysis_qt,
    "eд": item_analysis_count
}

print("название: ", item_analysis_dict["название"])
print("цена: ", item_analysis_dict["цена"])
print("количество: ", item_analysis_dict["количество"])
print("eд: ", item_analysis_dict["eд"])
